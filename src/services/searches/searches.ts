/**
 * Generated by orval v6.2.3 üç∫
 * Do not edit manually.
 * Jobbi Back-end
 * Swagger for Jobbi Back-end

Schemes: [http, https]
 * OpenAPI spec version: 1.0.0
 */
import {
  useQuery,
  UseQueryOptions,
  QueryFunction
} from 'react-query'
import type {
  SearchDTO
} from '../../types/dtos'
import { customInstance } from '.././config'

type AsyncReturnType<
T extends (...args: any) => Promise<any>
> = T extends (...args: any) => Promise<infer R> ? R : any;


/**
 * Return all searches
 * @summary Get all searches.
 */
export const getSearches = (
    
 ) => {
      return customInstance<SearchDTO[]>(
      {url: `/searches`, method: 'get'
    },
      );
    }
  

export const getGetSearchesQueryKey = () => [`/searches`];

    
export const useGetSearches = <TData = AsyncReturnType<typeof getSearches>, TError = void>(
  options?: { query?:UseQueryOptions<AsyncReturnType<typeof getSearches>, TError, TData>, }

  ) => {

  const {query: queryOptions} = options || {}

  const queryKey = queryOptions?.queryKey ?? getGetSearchesQueryKey();
  const queryFn: QueryFunction<AsyncReturnType<typeof getSearches>> = () => getSearches();

  const query = useQuery<AsyncReturnType<typeof getSearches>, TError, TData>(queryKey, queryFn, queryOptions)

  return {
    queryKey,
    ...query
  }
}

