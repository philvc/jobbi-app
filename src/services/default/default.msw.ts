/**
 * Generated by orval v6.2.3 🍺
 * Do not edit manually.
 * Jobbi Back-end
 * Swagger for Jobbi Back-end

Schemes: [http, https]
 * OpenAPI spec version: 1.0.0
 */
import {
  rest
} from 'msw'
import faker from 'faker'

export const getGetUserBySubMock = () => ({email: (() => faker.internet.email())(), externalId: faker.random.word(), firstName: (() => faker.name.firstName())(), id: faker.datatype.number(), lastName: (() => faker.name.lastName())()})

export const getModifyUserMock = () => ({email: (() => faker.internet.email())(), externalId: faker.random.word(), firstName: (() => faker.name.firstName())(), id: faker.datatype.number(), lastName: (() => faker.name.lastName())()})

export const getCreateUserMock = () => ({email: (() => faker.internet.email())(), externalId: faker.random.word(), firstName: (() => faker.name.firstName())(), id: faker.datatype.number(), lastName: (() => faker.name.lastName())()})

export const getDefaultMSW = () => [
rest.get('*/me', (req, res, ctx) => {
        return res(
          ctx.delay(1000),
          ctx.status(200, 'Mocked status'),
ctx.json(getGetUserBySubMock()),
        )
      }),rest.put('*/me', (req, res, ctx) => {
        return res(
          ctx.delay(1000),
          ctx.status(200, 'Mocked status'),
ctx.json(getModifyUserMock()),
        )
      }),rest.post('*/users', (req, res, ctx) => {
        return res(
          ctx.delay(1000),
          ctx.status(200, 'Mocked status'),
ctx.json(getCreateUserMock()),
        )
      }),]
